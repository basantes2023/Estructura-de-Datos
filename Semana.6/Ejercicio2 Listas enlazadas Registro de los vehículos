/// Ejercicio 2. Crear un programa que permita llevar el registro de los vehículos del estacionamiento del Área de Ingeniería de Sistemas de la Universidad utilizando como estructura de almacenamiento listas enlazadas. Los datos solicitados por cada vehículo son: placa, marca, modelo, año y precio. El programa debe permitir realizar las siguientes operaciones:
// a. Agregar vehículo.
// b. Buscar vehículo por placa.
// c. Ver vehículos por año.
// d. Ver todos los vehículos registrados.
// e. Eliminar carro registrado.


using System;

namespace Estacionamiento
{
    class Program
    {
        static void Main(string[] args)
        {
            LinkedList vehicles = new LinkedList();

            while (true)
            {
                Console.WriteLine("Seleccione una opcion:");
                Console.WriteLine("1. Agregar vehiculo");
                Console.WriteLine("2. Buscar vehiculo por placa");
                Console.WriteLine("3. Ver vehiculos por año");
                Console.WriteLine("4. Ver todos los vehiculos registrados");
                Console.WriteLine("5. Eliminar vehiculo registrado");
                Console.WriteLine("6. Salir");

                int option = int.Parse(Console.ReadLine());

                switch (option)
                {
                    case 1:
                        vehicles.AddVehicle();
                        break;
                    case 2:
                        vehicles.SearchByPlate();
                        break;
                    case 3:
                        vehicles.ViewByYear();
                        break;
                    case 4:
                        vehicles.ViewAll();
                        break;
                    case 5:
                        vehicles.DeleteVehicle();
                        break;
                    case 6:
                        return;
                    default:
                        Console.WriteLine("Opcion no valida.");
                        break;
                }
            }
        }
    }

    public class Vehicle
    {
        public string Plate { get; set; }
        public string Brand { get; set; }
        public string Model { get; set; }
        public int Year { get; set; }
        public double Price { get; set; }
        public Vehicle Next { get; set; }

        public Vehicle(string plate, string brand, string model, int year, double price)
        {
            Plate = plate;
            Brand = brand;
            Model = model;
            Year = year;
            Price = price;
            Next = null;
        }

        public override string ToString()
        {
            return $"Placa: {Plate}, Marca: {Brand}, Modelo: {Model}, Año: {Year}, Precio: {Price}";
        }
    }

    public class LinkedList
    {
        public Vehicle Head { get; private set; }

        public LinkedList()
        {
            Head = null;
        }

        public void AddVehicle()
        {
            Console.WriteLine("Ingrese la placa:");
            string plate = Console.ReadLine();
            Console.WriteLine("Ingrese la marca:");
            string brand = Console.ReadLine();
            Console.WriteLine("Ingrese el modelo:");
            string model = Console.ReadLine();
            Console.WriteLine("Ingrese el año:");
            int year = int.Parse(Console.ReadLine());
            Console.WriteLine("Ingrese el precio:");
            double price = double.Parse(Console.ReadLine());

            Vehicle newVehicle = new Vehicle(plate, brand, model, year, price);

            if (Head == null)
            {
                Head = newVehicle;
            }
            else
            {
                Vehicle current = Head;
                while (current.Next != null)
                {
                    current = current.Next;
                }
                current.Next = newVehicle;
            }
            Console.WriteLine("Vehículo agregado exitosamente.");
        }

        public void SearchByPlate()
        {
            Console.WriteLine("Ingrese la placa del vehículo a buscar:");
            string plate = Console.ReadLine();

            Vehicle current = Head;
            while (current != null)
            {
                if (current.Plate.Equals(plate, StringComparison.OrdinalIgnoreCase))
                {
                    Console.WriteLine("Vehículo encontrado:");
                    Console.WriteLine(current);
                    return;
                }
                current = current.Next;
            }
            Console.WriteLine("Vehiculo no encontrado.");
        }

        public void ViewByYear()
        {
            Console.WriteLine("Ingrese el año de los vehiculos a ver:");
            int year = int.Parse(Console.ReadLine());

            Vehicle current = Head;
            bool found = false;
            while (current != null)
            {
                if (current.Year == year)
                {
                    Console.WriteLine(current);
                    found = true;
                }
                current = current.Next;
            }
            if (!found)
            {
                Console.WriteLine("No se encontraron vehiculos para el año especificado.");
            }
        }

        public void ViewAll()
        {
            if (Head == null)
            {
                Console.WriteLine("No hay vehiculos registrados.");
                return;
            }

            Vehicle current = Head;
            while (current != null)
            {
                Console.WriteLine(current);
                current = current.Next;
            }
        }

        public void DeleteVehicle()
        {
            Console.WriteLine("Ingrese la placa del vehiculo a eliminar:");
            string plate = Console.ReadLine();

            if (Head == null)
            {
                Console.WriteLine("No hay vehiculos registrados.");
                return;
            }

            if (Head.Plate.Equals(plate, StringComparison.OrdinalIgnoreCase))
            {
                Head = Head.Next;
                Console.WriteLine("Vehiculo eliminado exitosamente.");
                return;
            }

            Vehicle current = Head;
            while (current.Next != null)
            {
                if (current.Next.Plate.Equals(plate, StringComparison.OrdinalIgnoreCase))
                {
                    current.Next = current.Next.Next;
                    Console.WriteLine("Vehiculo eliminado exitosamente.");
                    return;
                }
                current = current.Next;
            }
            Console.WriteLine("Vehiculo no encontrado.");
        }
    }
}

